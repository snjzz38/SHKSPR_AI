from http.server import BaseHTTPRequestHandler
from urllib.parse import urlparse, parse_qs
from youtube_transcript_api import YouTubeTranscriptApi
from youtube_transcript_api.proxies import GenericProxyConfig
import json
import random

# --- Your Curated "Gold List" of Working Proxies ---
# This list was generated by the local proxy tester.
GOLD_PROXY_LIST = [
    "184.170.248.5:4145", "142.54.239.1:4145", "198.8.84.3:4145",
    "184.178.172.26:4145", "24.249.199.4:4145", "72.195.34.41:4145",
    "206.220.175.2:4145", "199.102.107.145:4145", "192.252.214.20:15864",
    "68.71.247.130:4145", "107.152.98.5:4145", "47.252.18.37:3129",
    "47.252.18.37:9080", "47.251.87.74:8983", "8.211.49.86:808",
    "8.209.96.245:1099", "47.90.149.238:1036", "8.221.138.111:6379",
    "70.166.167.55:57745", "8.213.129.15:10000", "47.92.143.92:8080",
    "47.76.144.139:8008", "8.213.222.157:5060", "8.213.195.191:30000",
    "156.244.11.6:443", "8.213.195.191:4002", "8.211.200.183:1080",
    "8.213.222.247:15", "223.25.109.114:8199", "8.211.195.139:28737",
    "8.211.195.173:3129", "47.91.29.151:4002", "98.188.47.132:4145",
    "192.111.135.17:18302", "8.210.17.35:9080", "47.91.115.179:4145",
    "72.37.216.68:4145", "8.220.204.92:4145", "47.74.46.81:18080",
    "192.111.137.37:18762", "44.251.173.250:368", "184.178.172.18:15280",
    "47.251.74.38:9080", "8.211.51.115:9080", "142.54.237.34:4145",
    "47.252.11.233:8080", "8.221.139.222:6379", "8.220.204.92:90",
    "47.121.183.107:9999", "8.211.200.183:1234", "8.221.141.88:91",
    "8.211.195.139:8008", "39.102.214.199:9999", "13.59.113.45:31280",
    "8.213.197.208:9080", "47.121.133.212:8008", "83.169.255.92:1080",
    "8.213.215.187:176", "98.170.57.249:4145", "199.229.254.129:4145",
    "202.136.88.210:11011", "39.104.57.33:9080", "74.119.147.209:4145",
    "47.76.144.139:18080", "69.61.200.104:36181", "192.111.139.162:4145",
    "47.237.107.41:3128", "98.170.57.231:4145", "8.213.197.208:18080",
    "68.71.251.134:4145", "47.238.134.126:999", "8.138.82.6:9098",
    "184.170.245.148:4145", "120.26.104.146:80", "184.178.172.25:15291",
    "192.252.211.197:14921", "184.178.172.11:4145", "47.89.159.212:8010",
    "8.213.197.208:8889", "199.116.114.11:4145", "47.254.36.213:199",
    "68.71.243.14:4145", "47.121.129.129:8888", "31.211.142.115:8192",
    "8.213.134.213:50", "184.170.249.65:4145", "8.213.195.191:90",
    "8.213.222.247:3333", "118.70.151.55:1080", "8.221.139.222:8108",
    "47.251.74.38:1000", "15.160.186.74:521", "8.211.194.78:81",
    "104.200.135.46:4145", "39.102.210.176:9098", "192.252.209.155:14455",
    "47.121.183.107:8443", "192.111.137.35:4145", "8.211.194.78:3128",
    "198.8.94.170:4145", "223.25.109.146:8199", "47.251.73.54:90",
    "8.220.204.215:30001", "72.195.34.58:4145", "199.102.105.242:4145",
    "43.133.37.149:1080", "160.25.8.26:11011", "192.252.208.67:14287",
    "68.71.254.6:4145", "8.211.49.86:7777", "103.187.39.21:1080",
    "47.254.36.213:123", "72.195.34.35:27360", "192.252.220.92:17328",
    "8.213.222.247:5060", "47.238.134.126:8080", "192.111.138.29:4145",
    "184.181.217.220:4145", "47.238.128.246:8888", "47.90.167.27:443",
    "8.211.195.139:100", "98.175.31.195:4145", "8.211.200.183:4006",
    "184.178.172.3:4145", "68.71.249.153:48606", "47.76.144.139:4006",
    "8.213.129.15:10001", "8.213.215.187:3000", "192.111.130.2:4145",
    "8.213.134.213:89", "199.116.112.6:4145", "174.77.111.196:4145",
    "47.238.130.212:4145", "142.54.229.249:4145", "47.91.29.151:3128",
    "39.104.57.33:9098", "47.91.89.3:8443", "47.251.87.74:8081",
    "8.213.134.213:18080", "66.42.224.229:41679", "149.129.255.179:8443",
    "24.249.199.12:4145", "39.102.213.3:8888", "47.251.87.199:9098",
    "47.74.46.81:8047", "72.195.114.169:4145", "8.211.42.167:9080",
    "67.201.59.70:4145", "192.252.216.81:4145", "47.91.89.3:8080",
    "47.251.87.74:8080", "67.201.58.190:4145", "8.213.215.187:3129",
    "184.181.217.194:4145", "47.74.46.81:45", "208.102.51.6:58208",
    "8.213.129.15:83", "174.64.199.82:4145", "8.219.229.53:8080",
    "199.58.184.97:4145", "39.102.210.176:8008", "106.14.91.83:3128",
    "104.37.135.145:4145", "142.54.231.38:4145", "184.178.172.5:15303",
    "142.54.237.38:4145", "184.178.172.14:4145", "47.92.219.102:6379",
    "103.141.67.50:9090", "104.200.152.30:4145", "68.71.252.38:4145",
    "47.91.89.3:8040", "47.238.130.212:9050", "47.120.36.32:9011",
    "67.201.33.10:25283", "174.77.111.197:4145", "47.119.19.221:3128",
    "39.104.16.201:9098", "199.102.106.94:4145", "199.102.104.70:4145",
    "8.220.205.172:1337", "192.252.215.5:16137", "47.252.11.233:20",
    "68.71.249.158:4145", "47.254.36.213:20000", "8.220.205.172:3749",
    "192.111.139.165:4145", "72.195.114.184:4145", "161.35.70.249:1080",
    "142.54.236.97:4145", "8.211.51.115:9050", "8.148.24.225:3128",
    "184.181.217.206:4145", "68.1.210.189:4145", "8.211.194.85:312",
    "38.54.9.151:1234", "95.188.64.220:1080", "142.54.228.193:4145",
    "72.195.34.42:4145", "8.211.194.85:100", "70.166.167.38:57728",
    "142.54.232.6:4145", "98.181.137.80:4145", "103.118.175.165:8199",
    "38.183.144.18:1080", "199.58.185.9:4145", "47.250.159.65:9098",
    "184.181.217.201:4145", "8.221.138.111:3129", "8.213.222.157:1081",
    "68.1.210.163:4145", "47.92.194.235:8080", "192.111.134.10:4145",
    "8.220.204.215:9080", "198.8.94.174:39078", "47.109.110.100:9098",
    "8.221.138.111:2000", "184.181.217.213:4145", "8.217.111.249:1011",
    "68.71.242.118:4145", "184.178.172.13:15311", "45.77.156.171:9091",
    "184.181.217.210:4145", "174.64.199.79:4145", "160.25.8.162:11011",
    "192.111.129.145:16894", "47.238.128.246:9200", "47.238.60.156:8008",
    "47.238.60.156:8080", "47.238.60.156:4002", "184.178.172.23:4145",
    "8.213.156.191:12000", "8.137.62.53:9098", "47.238.60.156:9098",
    "107.181.161.81:4145", "43.131.9.114:1777", "8.218.39.40:10800",
    "47.90.167.27:9050", "47.252.11.233:8443", "192.111.137.34:18765",
    "101.200.158.109:8880", "8.213.137.155:8019", "47.104.198.111:8443",
    "192.111.139.163:19404", "8.211.42.167:104", "8.211.51.115:84",
    "142.54.235.9:4145", "106.14.104.220:80", "74.119.144.60:4145",
    "174.77.111.198:49547", "47.238.60.156:13", "139.59.1.14:1080",
    "87.107.48.53:1080", "98.181.137.83:4145", "46.10.229.243:7777",
    "176.108.246.18:10801", "8.213.156.191:3541", "107.181.168.145:4145",
    "8.213.137.155:548", "47.119.22.92:3128", "47.92.82.167:7890",
    "72.37.217.3:4145", "184.178.172.28:15294", "47.238.128.246:4145",
    "39.102.209.163:9999", "39.102.214.208:80", "98.188.47.150:4145",
    "47.91.110.148:8443", "184.178.172.17:4145", "8.213.137.155:7443",
    "39.104.59.56:80", "8.220.194.115:1080", "115.127.107.106:1080",
    "72.195.34.60:27391", "47.251.74.38:3128", "47.252.18.37:999",
    "8.220.205.172:8008", "192.252.208.70:14282", "8.213.156.191:8888",
    "162.253.68.97:4145", "98.178.72.21:10919", "47.109.110.100:8089",
    "142.54.226.214:4145", "192.111.130.5:17002", "192.111.135.18:18301",
    "8.213.128.6:50001", "47.251.87.199:8081", "47.89.159.212:8083",
    "72.195.34.59:4145", "47.251.87.199:50", "8.220.136.174:8008",
    "149.129.255.179:1081", "220.247.166.135:8008", "149.129.226.9:32768",
    "39.104.57.33:3128", "39.102.214.192:9080", "8.220.204.215:5060",
    "47.90.167.27:8081", "77.246.100.210:8080", "8.138.149.37:9098",
    "47.251.73.54:5060", "72.49.49.11:31034"
]

class handler(BaseHTTPRequestHandler):

    def do_GET(self):
        query_components = parse_qs(urlparse(self.path).query)
        video_id = query_components.get('video_id', [None])[0]

        if not video_id:
            self.send_response(400)
            self.send_header('Content-type', 'application/json')
            self.end_headers()
            self.wfile.write(json.dumps({'error': 'video_id parameter is required'}).encode('utf-8'))
            return

        try:
            if not GOLD_PROXY_LIST:
                raise Exception("The proxy list is empty.")

            formatted_proxies = [f"socks5://{proxy}" for proxy in GOLD_PROXY_LIST]
            
            print(f"Using a curated list of {len(formatted_proxies)} proxies. Shuffling and testing...")
            random.shuffle(formatted_proxies)

            transcript_data = None
            # To avoid the Vercel timeout, we only try a random subset of 40 proxies from the gold list.
            for i, proxy_url in enumerate(formatted_proxies[:40]):
                print(f"Attempting proxy {i+1}/40 from the gold list.")
                try:
                    proxy_config = GenericProxyConfig(http_url=proxy_url, https_url=proxy_url)
                    api = YouTubeTranscriptApi(proxy_config=proxy_config)
                    transcript_list = api.fetch(video_id)
                    
                    transcript_data = transcript_list
                    print(f"Proxy successful!")
                    break
                except Exception as e:
                    print(f"Curated proxy failed. Trying next...")
                    continue

            if not transcript_data:
                raise Exception("All proxies in the random sample failed. The proxies may have gone offline or are being blocked by YouTube. You may need to generate a new list.")

            full_transcript = " ".join([segment.text for segment in transcript_data])

            self.send_response(200)
            self.send_header('Content-type', 'application/json')
            self.send_header('Access-Control-Allow-Origin', '*')
            self.end_headers()
            self.wfile.write(json.dumps({'transcript': full_transcript}).encode('utf-8'))

        except Exception as e:
            self.send_response(500)
            self.send_header('Content-type', 'application/json')
            self.send_header('Access-Control-Allow-Origin', '*')
            self.end_headers()
            self.wfile.write(json.dumps({'error': f'An error occurred: {str(e)}'}).encode('utf-8'))
            
        return
